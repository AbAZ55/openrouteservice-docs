{
    "swagger": "2.0",
    "info": {
        "description": "This is a test documentation for the ORS api. The api is located at https://api.github.com/",
        "version": "0.0.1",
        "title": "ORS API",
        "contact": {
            "email": "openrouteservice@geog.uni-heidelberg.de"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/swagger-api/swagger-ui/blob/master/LICENSE"
        }
    },
    "host": "129.206.7.188:8080",
    "basePath": "/ors",
    "produces": [
        "text/json; charset=utf-8"
    ],
    "schemes": [
        "http"
    ],
    "securityDefinitions": {
        "UserSecurity": {
            "description": "Add your API Key as the value of the _api_\\__key_ parameter to your GET request. (In this Demo you can click the Authentication Button.)",
            "type": "apiKey",
            "in": "query",
            "name": "api_key"
        }
    },
    "security": [
        {
            "UserSecurity": []
        }
    ],
    "paths": {
        "/routing": {
            "get": {
                "summary": "Routing Service",
                "description": "Returns a route between two or more locations for a selected profile and its settings as GeoJSON response.\n",
                "parameters": [
                    {
                        "name": "coordinates",
                        "in": "query",
                        "description": "Pipe separated List of longitude,latitude coordinates visited in order.",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string",
                            "format": "longitude,latitude"
                        }
                    },
                    {
                        "name": "profile",
                        "in": "query",
                        "description": "Specifies the routing profile.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "driving-car",
                            "driving-hgv",
                            "cycling-regular",
                            "cycling-road",
                            "cycling-safe",
                            "cycling-mountain",
                            "cycling-tour",
                            "foot-walking",
                            "foot-hiking",
                            "wheelchair"
                        ]
                    },
                    {
                        "name": "preference",
                        "in": "query",
                        "description": "Specifies the routing preference.",
                        "type": "string",
                        "enum": [
                            "fastest",
                            "shortest",
                            "recommended"
                        ],
                        "default": "fastest"
                    },
                    {
                        "name": "units",
                        "in": "query",
                        "description": "Specifies the distance unit.",
                        "type": "string",
                        "enum": [
                            "m",
                            "km",
                            "mi"
                        ],
                        "default": "m"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "Language for the route instructions.",
                        "type": "string",
                        "enum": [
                            "cn",
                            "de",
                            "en",
                            "es",
                            "ru"
                        ],
                        "default": "en"
                    },
                    {
                        "name": "geometry",
                        "in": "query",
                        "description": "Specifies whether to return geometry or not.",
                        "type": "boolean",
                        "enum": [
                            true,
                            false
                        ],
                        "default": true
                    },
                    {
                        "name": "geometry_format",
                        "in": "query",
                        "description": "Sets the format of a returned geometry.",
                        "type": "string",
                        "enum": [
                            "encodedpolyline",
                            "geojson",
                            "polyline"
                        ],
                        "default": "encodedpolyline"
                    },
                    {
                        "name": "geometry_simplify",
                        "in": "query",
                        "description": "Specifies whether to simplify the geometry. If True will be reset to False for a specified extra_info parameter.",
                        "type": "boolean",
                        "enum": [
                            true,
                            false
                        ],
                        "default": false,
                        "format": "double"
                    },
                    {
                        "name": "instructions",
                        "in": "query",
                        "description": "Specifies whether to return instructions or not.",
                        "type": "boolean",
                        "enum": [
                            true,
                            false
                        ],
                        "default": true
                    },
                    {
                        "name": "instructions_format",
                        "in": "query",
                        "description": "Select _html_ for more verbose instructions.",
                        "type": "string",
                        "enum": [
                            "html",
                            "text"
                        ],
                        "default": "text"
                    },
                    {
                        "name": "elevation",
                        "in": "query",
                        "description": "Specifies whether to return elevation values for points or not.",
                        "type": "boolean",
                        "enum": [
                            true,
                            false
                        ],
                        "default": false
                    },
                    {
                        "name": "extra_info",
                        "in": "query",
                        "description": "Pipe separated List of desired additional information.",
                        "type": "array",
                        "collectionFormat": "pipes",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "steepness",
                                "suitability",
                                "surface",
                                "waycategory",
                                "waytype"
                            ]
                        }
                    },
                    {
                        "name": "options",
                        "in": "query",
                        "description": "For advanced options formatted as json. Add object as string.",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Arbitrary identification string of the request reflected in the meta information.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standard response for successfully processed requests. Returns JSON.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "400": {
                        "description": "The request is incorrect and therefore can not be processed.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "405": {
                        "description": "The specified HTTP method is not supported. For more details, refer to the EndPoint documentation."
                    },
                    "413": {
                        "description": "The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit."
                    },
                    "500": {
                        "description": "An unexpected error was encountered and more detailed internal error code is provided."
                    },
                    "501": {
                        "description": "Indicates that the server does not support the functionality needed to fulfill the request."
                    },
                    "503": {
                        "description": "The server is currently unavailable due to overload or maintenance."
                    }
                }
            }
        },
        "/geocoding (normal)": {
            "get": {
                "summary": "Geocoding Service",
                "description": "Returns a JSON formatted list of objects corresponding to the search input.\n",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Name of location, street address or postal code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "Sets the language of the response.",
                        "type": "string",
                        "enum": [
                            "de",
                            "en",
                            "fr",
                            "it"
                        ],
                        "default": "en"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specifies the maximum number of responses.",
                        "type": "number",
                        "format": "double",
                        "default": 20
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Arbitrary identification string of the request reflected in the meta information.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standard response for successfully processed requests. Returns JSON.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "400": {
                        "description": "The request is incorrect and therefore can not be processed.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "405": {
                        "description": "The specified HTTP method is not supported. For more details, refer to the EndPoint documentation."
                    },
                    "413": {
                        "description": "The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit."
                    },
                    "500": {
                        "description": "An unexpected error was encountered and more detailed internal error code is provided."
                    },
                    "501": {
                        "description": "Indicates that the server does not support the functionality needed to fulfill the request."
                    },
                    "503": {
                        "description": "The server is currently unavailable due to overload or maintenance."
                    }
                }
            }
        },
        "/geocoding (reverse)": {
            "get": {
                "summary": "Reverse Geocoding Service",
                "description": "Returns the next enclosing object with an address tag which surrounds the given coordinate.\n",
                "parameters": [
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Coordinate to be inquired",
                        "required": true,
                        "type": "number",
                        "format": "longitude,latitude"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "Sets the language of the response.",
                        "type": "string",
                        "enum": [
                            "de",
                            "en",
                            "fr",
                            "it"
                        ],
                        "default": "en"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Arbitrary identification string of the request reflected in the meta information.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standard response for successfully processed requests. Returns JSON.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "400": {
                        "description": "The request is incorrect and therefore can not be processed.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "405": {
                        "description": "The specified HTTP method is not supported. For more details, refer to the EndPoint documentation."
                    },
                    "413": {
                        "description": "The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit."
                    },
                    "500": {
                        "description": "An unexpected error was encountered and more detailed internal error code is provided."
                    },
                    "501": {
                        "description": "Indicates that the server does not support the functionality needed to fulfill the request."
                    },
                    "503": {
                        "description": "The server is currently unavailable due to overload or maintenance."
                    }
                }
            }
        },
        "/isochrones": {
            "get": {
                "summary": "Isochrones Service",
                "description": "The Isochrone Service supports time and distance analyses for one single or multiple locations. You may also specify the isochrone interval or provide multiple exact isochrone range values. This service allows the same range of profile options listed in the ORS Routing section which help you to further customize your request to obtain a more detailed reachability area response.\n",
                "parameters": [
                    {
                        "name": "locations",
                        "in": "query",
                        "description": "List of longitude,latitude coordinates delimited with pipe.\n",
                        "required": true,
                        "type": "number",
                        "format": "longitude,latitude"
                    },
                    {
                        "name": "profile",
                        "in": "query",
                        "description": "Specifies the routing profile.",
                        "type": "string",
                        "enum": [
                            "driving-car",
                            "driving-hgv",
                            "cycling-regular",
                            "cycling-road",
                            "cycling-safe",
                            "cycling-mountain",
                            "cycling-tour",
                            "foot-walking",
                            "foot-hiking"
                        ],
                        "default": "driving-car"
                    },
                    {
                        "name": "range_type",
                        "in": "query",
                        "description": "Set 'time' for isochrones or 'distance' for equidistants.\n",
                        "type": "string",
                        "default": "time"
                    },
                    {
                        "name": "range",
                        "in": "query",
                        "description": "Maximum range value of the analysis in seconds for time and meters for distance. Alternatively a comma separated list of specific single range values\n",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "description": "Interval of isochrones or equidistants for one range value. value in seconds for time and meters for distance.\n",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "units",
                        "in": "query",
                        "description": "Unit format.\n",
                        "type": "string",
                        "enum": [
                            "m",
                            "km",
                            "mi",
                            "s"
                        ],
                        "default": "m"
                    },
                    {
                        "name": "location_type",
                        "in": "query",
                        "description": "start(default) treats the location(s) as starting point, destination as goal.\n",
                        "type": "string",
                        "enum": [
                            "start",
                            "destination"
                        ],
                        "default": "start"
                    },
                    {
                        "name": "attributes",
                        "in": "query",
                        "description": "Values are area and reachfactor. Delimit with pipe for both.\n",
                        "type": "array",
                        "collectionFormat": "pipes",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "area",
                                "reachfactor"
                            ]
                        }
                    },
                    {
                        "name": "options",
                        "in": "query",
                        "description": "For advanced options formatted as JSON. Add object as string: \"{...}\".\n",
                        "type": "string"
                    },
                    {
                        "name": "intersections",
                        "in": "query",
                        "description": "Specifies whether to return intersection polygons.\n",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Arbitrary identification string of the request reflected in the meta information.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standard response for successfully processed requests. Returns JSON.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "400": {
                        "description": "The request is incorrect and therefore can not be processed.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "405": {
                        "description": "The specified HTTP method is not supported. For more details, refer to the EndPoint documentation."
                    },
                    "413": {
                        "description": "The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit."
                    },
                    "500": {
                        "description": "An unexpected error was encountered and more detailed internal error code is provided."
                    },
                    "501": {
                        "description": "Indicates that the server does not support the functionality needed to fulfill the request."
                    },
                    "503": {
                        "description": "The server is currently unavailable due to overload or maintenance."
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "summary": "Location Service",
                "description": "Returns Points of Interest in the area surrounding a geometry.\n",
                "parameters": [
                    {
                        "name": "request",
                        "in": "query",
                        "description": "\"pois\" will return POI geometry as well as requested details. \"category_stats\" returns a POI count for each requested category. \"category_list\" returns a list of all categories. (only the id parameter will be considered)\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "pois",
                            "category_stats",
                            "category_list"
                        ]
                    },
                    {
                        "name": "category_group_ids",
                        "in": "query",
                        "description": "Comma seperated list of category group ids.\n",
                        "collectionFormat": "csv",
                        "type": "string"
                    },
                    {
                        "name": "category_ids",
                        "in": "query",
                        "description": "Comma seperated list of category ids.\n",
                        "collectionFormat": "csv",
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name to filter the POIs by.\n",
                        "type": "string"
                    },
                    {
                        "name": "wheelchair",
                        "in": "query",
                        "description": "Filter returned features by wheelchair tag entries.\n",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no",
                            "limited"
                        ]
                    },
                    {
                        "name": "smoking",
                        "in": "query",
                        "description": "Filter returned features by wheelchair tag entries.\n",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "fee",
                        "in": "query",
                        "description": "Filter returned features by fee tag entries.\n",
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "bbox",
                        "in": "query",
                        "description": "Defines a clipping bounding box\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "maxItems": 4,
                        "minItems": 4,
                        "items": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "geometry",
                        "in": "query",
                        "description": "GeoJSON geometry object (Point, Linestring or Polygon)\n",
                        "type": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": true,
                        "description": "Search radius in meters around the given (might be limited in the backend)\n",
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "maximum": 1000
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of returned objects (might be limited in the backend)\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sorts the returned features by _distance_ or _category_.\n",
                        "type": "string",
                        "enum": [
                            "distance",
                            "category"
                        ]
                    },
                    {
                        "name": "details",
                        "in": "query",
                        "description": "Pipe seperated list of desired details.\n",
                        "type": "array",
                        "collectionFormat": "pipes",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "address",
                                "contact",
                                "attributes"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Arbitrary identification string of the request reflected in the meta information.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standard response for successfully processed requests. Returns JSON.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "400": {
                        "description": "The request is incorrect and therefore can not be processed.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "405": {
                        "description": "The specified HTTP method is not supported. For more details, refer to the EndPoint documentation."
                    },
                    "413": {
                        "description": "The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit."
                    },
                    "500": {
                        "description": "An unexpected error was encountered and more detailed internal error code is provided."
                    },
                    "501": {
                        "description": "Indicates that the server does not support the functionality needed to fulfill the request."
                    },
                    "503": {
                        "description": "The server is currently unavailable due to overload or maintenance."
                    }
                }
            }
        }
    },
    "definitions": {
        "Product": {
            "title": "Response",
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles."
                },
                "description": {
                    "type": "string",
                    "description": "Description of product."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "capacity": {
                    "type": "string",
                    "description": "Capacity of product. For example, 4 people."
                },
                "image": {
                    "type": "string",
                    "description": "Image URL representing the product."
                }
            }
        },
        "RouteResponse": {
            "type": "object",
            "title": null,
            "properties": {
                "routes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "summary": {
                                "type": "object",
                                "description": "TBD",
                                "properties": {
                                    "duration": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "TBD"
                                    },
                                    "distance_actual": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "TBD"
                                    },
                                    "distance": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "TBD"
                                    }
                                }
                            },
                            "bbox": {
                                "type": "array",
                                "description": "TBD",
                                "collectionFormat": "csv",
                                "maxItems": 4,
                                "minItems": 4,
                                "items": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "geometry": {
                                "type": "string",
                                "description": "TBD"
                            },
                            "segments": {
                                "type": "array",
                                "description": "TBD",
                                "maxItems": 1,
                                "items": {
                                    "type": "object",
                                    "description": "TBD",
                                    "properties": {
                                        "duration": {
                                            "type": "number",
                                            "format": "double",
                                            "description": "TBD"
                                        },
                                        "distance": {
                                            "type": "number",
                                            "format": "double",
                                            "description": "TBD"
                                        },
                                        "steps": {
                                            "type": "array",
                                            "description": "TBD",
                                            "items": {
                                                "type": "object",
                                                "parameters": {
                                                    "duration": {
                                                        "type": "number",
                                                        "format": "double",
                                                        "description": "TBD"
                                                    },
                                                    "distance": {
                                                        "type": "number",
                                                        "format": "double",
                                                        "description": "TBD"
                                                    },
                                                    "instruction": {
                                                        "type": "string",
                                                        "description": "TBD"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "TBD"
                                                    },
                                                    "type": {
                                                        "type": "integer",
                                                        "fomrat": "int64"
                                                    },
                                                    "way_points": {
                                                        "type": "array",
                                                        "description": "TBD",
                                                        "minItems": 2,
                                                        "maxItems": 2,
                                                        "items": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "way_points": {
                                "type": "array",
                                "description": "TBD",
                                "minItems": 2,
                                "maxItems": 2,
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    }
                },
                "info": {
                    "type": "object",
                    "description": "TBD",
                    "properties": {
                        "service": {
                            "type": "string",
                            "description": "TBD"
                        },
                        "query": {
                            "type": "object",
                            "description": "TBD",
                            "required": [
                                "geometry_format",
                                "profile",
                                "coordinates"
                            ],
                            "properties": {
                                "geometry_format": {
                                    "type": "string"
                                },
                                "profile": {
                                    "type": "string"
                                },
                                "coordinates": {
                                    "type": "array",
                                    "collectionFormat": "csv",
                                    "items": {
                                        "type": "array",
                                        "collectionFormat": "csv",
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "items": {
                                            "type": "number",
                                            "format": "double"
                                        }
                                    }
                                }
                            }
                        },
                        "attribution": {
                            "type": "string"
                        },
                        "version": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "array": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "hello": {
                        "type": "string"
                    }
                }
            }
        },
        "PriceEstimate": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles"
                },
                "currency_code": {
                    "type": "string",
                    "description": "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "estimate": {
                    "type": "string",
                    "description": "Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or \"Metered\" for TAXI."
                },
                "low_estimate": {
                    "type": "number",
                    "description": "Lower bound of the estimated price."
                },
                "high_estimate": {
                    "type": "number",
                    "description": "Upper bound of the estimated price."
                },
                "surge_multiplier": {
                    "type": "number",
                    "description": "Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier."
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}